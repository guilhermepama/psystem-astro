---
import LogoT4P from "../brand/logoT4P.astro";
import { buttonVariants } from "@/components/ui/button";
import { supabase } from "../lib/supabase";

const { slug } = Astro.params as { slug: string };
const { email, id } = Astro.locals;
const link = `/${slug}/dashboard`;

// Consulta direta na tabela "clinica" para obter os dados da clínica pelo slug
const { data: clinicData, error: clinicError } = await supabase
  .from("clinica")
  .select("nome")
  .eq("slug", slug)
  .single();

if (clinicError) {
  console.error("Erro ao buscar clínica:", clinicError);
}

console.log("(Header-Dashboard) Dados da clínica:", clinicData);


---

<!-- Cabeçalho fixo no topo -->
<header class="sticky top-0 z-50 w-full bg-white/95 dark:bg-slate-800/95 border-b dark:border-zinc-700 backdrop-blur supports-[backdrop-filter]:bg-white/60">
  <!-- Barra de navegação -->
  <nav class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-0">
    <div class="flex h-16 items-center justify-between">
      <!-- Esquerda: Logo + Marca -->
      <div class="flex items-center text-xl">
        
        <LogoT4P link={link} />
        <p>&nbsp;&nbsp;|&nbsp;&nbsp; {clinicData ? clinicData.nome : "Nome não encontrado"}</p>
      
      </div>

      <!-- Direita: Menu Desktop (MD+) -->
      <div class="hidden md:flex items-center gap-6">

   
        <a href={`/${slug}/dashboard/clientes`} class="text-zinc-900 dark:text-gray-200  hover:text-primary hover:border-b-2 hover:py-1 hover:border-secondary transition-all">
          Pacientes
        
        </a>
        <a href={`/${slug}/dashboard/agenda`} class="text-zinc-900 dark:text-gray-200  hover:text-primary hover:border-b-2 hover:py-1 hover:border-secondary transition-all">
          Agenda
        </a>
        <a href={`/${slug}/dashboard/pagamentos`} class="text-zinc-900 dark:text-gray-200  hover:text-primary hover:border-b-2 hover:py-1 hover:border-secondary transition-all">
          Pagamentos
        </a>
        <p class="max-w-prose text-md text-indigo-600 dark:text-indigo-400 font-semibold">
          {email}
        </p>
        <a
          href=`/api/auth/signout?slug=${slug}`
          class={buttonVariants({ variant: "outline" })}
        >
          Sair
        </a>
      </div>

      <!-- Botão do menu mobile (visível somente em telas < MD) -->
      <div class="flex md:hidden">
        <button
          id="mobile-menu-button"
          type="button"
          class="inline-flex items-center justify-center p-2 text-zinc-900 dark:text-white hover:bg-zinc-100 dark:hover:bg-zinc-700 focus:outline-none"
        >
          <!-- Ícone do menu aberto -->
          <svg
            id="icon-menu"
            class="block h-6 w-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <!-- Ícone do menu fechado -->
          <svg
            id="icon-close"
            class="hidden h-6 w-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </nav>

  <!-- Menu mobile (dropdown), aparece quando clicamos no botão -->
  <div id="mobile-menu" class="md:hidden hidden bg-white dark:bg-zinc-800 border-t dark:border-zinc-700">
    <div class="p-4 flex flex-col gap-4">
      <p class="max-w-prose text-xl text-indigo-600 dark:text-indigo-400 font-semibold">
        {email}
      </p>
      <a href="/dashboard" class="text-zinc-900 dark:text-gray-200 hover:underline">
        Dashboard
      </a>
      <a href="/dashboard/clientes" class="text-zinc-900 dark:text-gray-200 hover:underline">
        Clientes
      </a>
      <a
        href=`${slug}/api/auth/logout`
        class={buttonVariants({ variant: "outline" })}
      >
        Sair
      </a>
    </div>
  </div>
</header>

<!-- Script inline para controlar o menu mobile -->
<script is:inline>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const iconMenu = document.getElementById("icon-menu");
  const iconClose = document.getElementById("icon-close");

  mobileMenuButton.addEventListener("click", () => {
    // Exibe/esconde o dropdown
    mobileMenu.classList.toggle("hidden");
    // Alterna os ícones de menu
    iconMenu.classList.toggle("hidden");
    iconClose.classList.toggle("hidden");
  });
</script>
