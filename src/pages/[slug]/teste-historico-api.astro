---
import Layout from '../../layout/BaseClinica.astro';
import { createClient } from '@supabase/supabase-js';

// Parâmetros para teste
const formId = Astro.url.searchParams.get('formId');
const token = Astro.url.searchParams.get('token');

let resultado = null;
let erro = null;
let clienteId = null;

if (formId && token) {
  try {
    // Criar cliente Supabase com os cabeçalhos necessários
    const supabase = createClient(
      import.meta.env.PUBLIC_SUPABASE_URL,
      import.meta.env.PUBLIC_SUPABASE_ANON_KEY,
      {
        global: {
          headers: {
            'x-formid': formId,
            'x-public-token': token
          }
        }
      }
    );

    // Tentar buscar o histórico clínico
    const { data, error } = await supabase
      .from('historico_clinico')
      .select('*')
      .single();

    if (error) {
      erro = error;
      console.error('Erro ao buscar histórico clínico:', error);
    } else {
      resultado = data;
      clienteId = data.cliente_id;
      console.log('Histórico clínico encontrado:', data);
      
      // Se encontrou o histórico, tenta buscar dados adicionais do cliente
      if (clienteId) {
        const { data: clienteData, error: clienteError } = await supabase
          .from('cliente')
          .select('nome, email')
          .eq('id', clienteId)
          .single();
          
        if (clienteError) {
          console.error('Erro ao buscar dados do cliente:', clienteError);
        } else {
          console.log('Dados do cliente:', clienteData);
          resultado.cliente = clienteData;
        }
      }
    }
  } catch (err) {
    erro = err;
    console.error('Erro inesperado:', err);
  }
}
---

<Layout title="Teste API Histórico Clínico">
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-2xl font-bold mb-6">Teste de API - Histórico Clínico</h1>
    
    <div class="bg-violet-700 p-4 rounded-lg mb-6">
      <h2 class="text-lg font-semibold mb-2">Instruções</h2>
      <p class="mb-2">
        Esta página testa o acesso à tabela "historico_clinico" usando as políticas de segurança do Supabase.
      </p>
      <p class="mb-2">
        A política requer que:
      </p>
      <ul class="list-disc pl-5 mb-4">
        <li>is_public = true</li>
        <li>id = cabeçalho x-formid</li>
        <li>public_token = cabeçalho x-public-token</li>
      </ul>
      <p>
        Use a URL: <code class="bg-violet-900 px-2 py-1 rounded">/teste-historico-api?formId=UUID&token=UUID</code>
      </p>
    </div>
    
    <div class="mb-6">
      <h2 class="text-lg font-semibold mb-2">Parâmetros Atuais</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <p class="font-medium">Form ID:</p>
          <code class="bg-violet-900 px-2 py-1 rounded block">{formId || 'Não fornecido'}</code>
        </div>
        <div>
          <p class="font-medium">Token:</p>
          <code class="bg-violet-900 px-2 py-1 rounded block">{token || 'Não fornecido'}</code>
        </div>
      </div>
    </div>
    
    <div class="mb-6">
      <h2 class="text-lg font-semibold mb-2">Formulário de Teste</h2>
      <form class="space-y-4" method="get">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label for="formId" class="block text-sm font-medium text-gray-700 mb-1">
              Form ID (UUID)
            </label>
            <input 
              type="text" 
              id="formId" 
              name="formId"
              value={formId || ''}
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Ex: 123e4567-e89b-12d3-a456-426614174000"
            />
          </div>
          <div>
            <label for="token" class="block text-sm font-medium text-gray-700 mb-1">
              Token (UUID)
            </label>
            <input 
              type="text" 
              id="token" 
              name="token"
              value={token || ''}
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Ex: 123e4567-e89b-12d3-a456-426614174000"
            />
          </div>
        </div>
        <div>
          <button 
            type="submit"
            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
          >
            Testar Acesso
          </button>
        </div>
      </form>
    </div>
    
    {formId && token && (
      <div class="mb-6">
        <h2 class="text-lg font-semibold mb-2">Resultado</h2>
        
        {erro ? (
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
            <p class="font-bold">Erro:</p>
            <pre class="mt-2 whitespace-pre-wrap">{JSON.stringify(erro, null, 2)}</pre>
          </div>
        ) : resultado ? (
          <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
            <p class="font-bold">Sucesso! Dados encontrados:</p>
            <pre class="mt-2 whitespace-pre-wrap">{JSON.stringify(resultado, null, 2)}</pre>
          </div>
        ) : (
          <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded">
            <p>Nenhum resultado encontrado.</p>
          </div>
        )}
      </div>
    )}
    
    <div class="bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded">
      <p class="font-bold">Dica:</p>
      <p class="mt-1">
        Para testar, você precisa de um ID de formulário válido e seu token público correspondente.
        Estes valores podem ser obtidos da tabela "historico_clinico" no Supabase.
      </p>
    </div>
  </div>
</Layout>
